@page "/"

<SfDashboardLayout Columns="8" CellSpacing="@(new double[]{10,10})" MediaQuery="max-width:700px">
	<DashboardLayoutPanels >
		<DashboardLayoutPanel Column="0" Row="0" SizeX="2" SizeY="1" >
		<HeaderTemplate>Income</HeaderTemplate>
            <ContentTemplate>
				<table>
					<tr>
						<td>
							<p class="income-container">$43,300</p>
						</td>
						<td>
							<img src="../income.jpg" style="margin-left:178px;" />
						</td>
					</tr>

				</table>
			</ContentTemplate>
        </DashboardLayoutPanel>

		<DashboardLayoutPanel Column="2" Row="0" SizeX="2" SizeY="1">
			<HeaderTemplate>Expenses</HeaderTemplate>
            <ContentTemplate>
				<table>
					<tr>
						<td>
							<p class="expense-container">$38,060</p>
						</td>
						<td>
							<img src="../expense.jpg" style="margin-left:176px; margin-top:-17px; " />
						</td>
					</tr>

				</table>
			</ContentTemplate>
        </DashboardLayoutPanel>

		<DashboardLayoutPanel Column="4" Row="0" SizeX="2" SizeY="1">
			<HeaderTemplate>Balance</HeaderTemplate>
			<ContentTemplate>
				<table>
					<tr>
						<td>
							<p class="in-container">$38,060</p>
						</td>
						<td>
							<img src="../balance.png" style="margin-left:185px;" />
						</td>
					</tr>

				</table>
			</ContentTemplate>
		</DashboardLayoutPanel>

		<DashboardLayoutPanel Column="6" Row="0" SizeX="2" SizeY="1">
			<HeaderTemplate>Transactions</HeaderTemplate>
			<ContentTemplate> Content of Panel4
				<table>
					<tr>
						<td>
							<p class="ex-container">$38,060</p>
						</td>
						<td>
							<img src="../trans.jpg" style="margin-left:185px; " />
						</td>
					</tr>

				</table>
			</ContentTemplate>
		</DashboardLayoutPanel>
		
		<DashboardLayoutPanel Column="0" Row="1" SizeX="4" SizeY="3">
            <HeaderTemplate>Income Expense</HeaderTemplate>
            <ContentTemplate>
				<SfChart >
						
						<ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.DateTimeCategory"  IntervalType="IntervalType.Months" LabelFormat="MMM" >
							
						</ChartPrimaryXAxis>
						<ChartPrimaryYAxis LabelFormat="${value}" Minimum="1000" Maximum="9000" Interval="2000">
							
						</ChartPrimaryYAxis>
						
						<ChartSeriesCollection>
							<ChartSeries DataSource="@IncomeExpenseData" Name="Income" XName="Period" 
										  YName="Income" Type="ChartSeriesType.SplineArea" Fill="#00BCD7">
							</ChartSeries>
							<ChartSeries DataSource="@IncomeExpenseData" Name="Expense" XName="Period" 
										  YName="Expense" Type="ChartSeriesType.SplineArea" Fill="#CDDE1F">
							</ChartSeries>
						</ChartSeriesCollection>
					</SfChart>
			</ContentTemplate>
        </DashboardLayoutPanel>

		<DashboardLayoutPanel Column="4" Row="1" SizeX="4" SizeY="3">
				<HeaderTemplate>Total Expenses</HeaderTemplate>
				<ContentTemplate>
				<SfAccumulationChart EnableSmartLabels="true">
					<AccumulationChartSeriesCollection>
						<AccumulationChartSeries DataSource="@PieRenderingData" XName="Text" YName="Y" Radius="83%" StartAngle="0" EndAngle="360" InnerRadius="50%" Palettes="@palettes">
							<AccumulationDataLabelSettings Visible="true" Name="X" Position="AccumulationLabelPosition.Outside">
							</AccumulationDataLabelSettings>
						</AccumulationChartSeries>
					</AccumulationChartSeriesCollection>
				</SfAccumulationChart>
				</ContentTemplate>
		</DashboardLayoutPanel>

		<DashboardLayoutPanel Column="0" Row="4" SizeX="8" SizeY="3">
				<HeaderTemplate>Recent Transactions</HeaderTemplate>
				<ContentTemplate>
				<SfGrid TValue="TransactionData" DataSource="@TransactData" Width="100%" Height="100%" AllowSorting="true" EnableHover="false" AllowPaging="false">
					<GridColumns>
						<GridColumn Field="@nameof(TransactionData.TransactoinId)" HeaderText="Transaction ID" Width="120" TextAlign="@TextAlign.Center"></GridColumn>
						<GridColumn Field="@nameof(TransactionData.Category)" HeaderText="Category" Width="120">
							<Template>
								@{
									var expense = (context as TransactionData);
									<div class="normalRes">
										<div class="category-icon @expense.IconCss"></div>
										<div class='category-text'>@expense.Category</div>
									</div>
								}
							</Template>
						</GridColumn>
						<GridColumn Field="@nameof(TransactionData.PaymentMode)" HeaderText="Payment Mode" Width="160" TextAlign="@TextAlign.Center"></GridColumn>
						<GridColumn Field="@nameof(TransactionData.Description)" HeaderText="Description" Width="160" TextAlign="@TextAlign.Center"></GridColumn>
						<GridColumn Field="@nameof(TransactionData.Amount)" HeaderText="Amount" Width="120" TextAlign="@TextAlign.Center">
							<Template>
								@{
									var expense = (context as TransactionData);
									<div class="normalRes">
										<div class='amt-payment @(expense.IsExpense ? "expense-payment" : "income-payment")'>
											<span>$</span><span>@expense.Amount</span>
										</div>
									</div>
								}
							</Template>
						</GridColumn>
					</GridColumns>
				</SfGrid>
				</ContentTemplate>
		</DashboardLayoutPanel>
    </DashboardLayoutPanels>     
</SfDashboardLayout>


  @code{
	 private List<IncomeExpense> IncomeExpenseData = new List<IncomeExpense>
	{
	new IncomeExpense { Period = new DateTime(2021, 01, 01), Income = 7490, Expense = 6973 },
	new IncomeExpense { Period = new DateTime(2021, 02, 01), Income = 6840, Expense = 6060 },
	new IncomeExpense { Period = new DateTime(2021, 03, 01), Income = 6060, Expense = 5500 },
	new IncomeExpense { Period = new DateTime(2012, 04, 01), Income = 8190, Expense = 7059 },
	new IncomeExpense { Period = new DateTime(2021, 05, 01), Income = 7320, Expense = 6333 },
	new IncomeExpense { Period = new DateTime(2021, 06, 01), Income = 7380, Expense = 6135 }
	};
	private List<RenderingData> PieRenderingData = new List<RenderingData>    {
	new RenderingData { X = "Mortgage / Rent", Text="15.76%", Y = 6000 },
	new RenderingData { X = "Food", Text="12.79%", Y = 4866 },
	new RenderingData { X = "Utilities", Text="10.93%", Y = 4160 },
	new RenderingData { X = "Bills", Text="10.4%", Y = 3960 },
	new RenderingData { X = "Shopping", Text="8.87%", Y = 3375 },
	new RenderingData { X = "Transportation", Text="8.49%", Y = 3230 },
	new RenderingData { X = "Insurance", Text="7.59%", Y = 2890 },
	new RenderingData { X = "Health Care", Text="6.52%", Y = 2480 },
	new RenderingData { X = "Clothing", Text="5.92%", Y = 2255 },
	new RenderingData { X = "Others", Text="12.73%", Y = 4844 }
	};
	private List<TransactionData> TransactData = new List<TransactionData> {
	new TransactionData { Category = "Food", Amount = 6, PaymentMode = "Debit Card", IconCss = "food", IsExpense = true, IsIncome = false, TransactoinId = "#131614678", Description = "Palmetto Cheese, Mint julep" },
	new TransactionData { Category = "Transportation", Amount = 7, PaymentMode = "Debit Card", IconCss = "travel", IsExpense = true, IsIncome = false, TransactoinId = "#131416876", Description = "Other vehicle expenses" },
	new TransactionData { Category = "Housing", Amount = 20, PaymentMode = "Credit Card", IconCss = "housing", IsExpense = true, IsIncome = false, TransactoinId = "#1711148579", Description = "Laundry and cleaning supplies" },
	new TransactionData { Category = "Extra Income", Amount = 110, PaymentMode = "Cash", IconCss = "extra-income", IsExpense = false, IsIncome = true, TransactoinId = "#1922419785", Description = "Income from Sale" },
	new TransactionData { Category = "Food", Amount = 10, PaymentMode = "Credit Card", IconCss = "food", IsExpense = true, IsIncome = false, TransactoinId = "#2744145880", Description = "Muffuletta sandwich, Mint julep" }
	};
	private class RenderingData
	{
		public string X { get; set; }
		public int Y { get; set; }
		public string Text { get; set; }
		public string Fill { get; set; }
	}
	private string[] palettes = new string[] { "#61EFCD", "#CDDE1F", "#FEC200", "#CA765A", "#2485FA", "#F57D7D", "#C152D2",
	"#8854D9", "#3D4EB8", "#00BCD7","#4472c4", "#ed7d31", "#ffc000", "#70ad47", "#5b9bd5", "#c1c1c1", "#6f6fe2", "#e269ae", "#9e480e", "#997300" };
	private class IncomeExpense
	{
		public DateTime Period { get; set; }
		public int Income { get; set; }
		public int Expense { get; set; }
	}
	private class TransactionData
	{
		public string Category { get; set; }
		public string Description { get; set; }
		public string PaymentMode { get; set; }
		public string IconCss { get; set; }
		public string TransactoinId { get; set; }
		public bool IsIncome { get; set; }
		public bool IsExpense { get; set; }
		public int Amount { get; set; }
	}

 }

 <style>
     .e-panel-header
     {
         text-align : center;
        
     }

     .e-panel-content
     {
         text-align: center;
       
     }
	 .income-container
	 {
	    font-size:x-large;
		color: #17a00e ;
		margin-top:14px;
	 }
	 .expense-container
	 {
		color: #ca765a;
		 font-size:x-large;
		margin-top: 14px;
	 }
	 .in-container {
		font-size: x-large;
		color: #17a00e;
		margin-top: 14px;
		padding: 15px;
	}
	 .ex-container
	 {
		color: #ca765a;
		 font-size:x-large;
		margin-top: 14px;
		padding:15px;
	 }

	.e-dashboardlayout.e-control .e-panel .e-panel-container .e-panel-header {
		color: #754131;
		background-color: #c9e2f7;
	}
	.category-icon {
		float: left;
		background-repeat: no-repeat;
		background-position-x: center;
		background-size: 100%;
		height: 30px;
		width: 30px;
		display: inline-block;
		margin-right: 10px;
	}

	.category-icon.food {
            background-image: url('food.png');
		
	}

		.category-icon.travel {
			background-image: url('travel.png');
		}

		.category-icon.housing {
            background-image: url('housing.png');
		}

		.category-icon.extra-income {
            background-image: url('extra income.jpg');
		}

</style>
<style type="text/css" media="screen and (max-width:700px)">
  .media-css
  {
   margin-left:170px !important;
  }
</style>


